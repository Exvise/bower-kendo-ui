{"version":3,"sources":["kendo.window.js"],"names":["f","define","$","undefined","defined","x","toInt","element","property","parseInt","css","constrain","value","low","high","normalizedValue","isNaN","indexOf","Math","max","min","Infinity","executableScript","this","type","toLowerCase","getPosition","elem","parentOverflowX","parentOverflowY","result","top","offsetTop","left","offsetLeft","parent","offsetParent","scrollTop","scrollLeft","WindowResizing","wnd","that","owner","_preventDragging","_draggable","Draggable","wrapper","filter","KWINDOWRESIZEHANDLES","group","id","dragstart","proxy","drag","dragend","userEvents","bind","addOverlay","removeOverlay","WindowDragging","dragHandle","dragcancel","stopPropagation","kendo","window","Widget","ui","TabKeyTrap","Popup","isPlainObject","activeElement","_activeElement","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","each","template","BODY","NS","MODAL_NS","KWINDOW","KWINDOWTITLE","KWINDOWTITLEBAR","KWINDOWCONTENT","KDIALOGCONTENT","KOVERLAY","KCONTENTFRAME","LOADING","KHOVERSTATE","KFOCUSEDSTATE","MAXIMIZEDSTATE","INLINE_FLEX","VISIBLE","HIDDEN","CURSOR","OPEN","ACTIVATE","DEACTIVATE","CLOSE","REFRESH","MINIMIZE","MAXIMIZE","RESIZESTART","RESIZE","RESIZEEND","DRAGSTART","DRAGEND","KENDOKEYDOWN","ERROR","OVERFLOW","DATADOCOVERFLOWRULE","ZINDEX","MINIMIZE_MAXIMIZE","KPIN","KUNPIN","PIN_UNPIN","TITLEBAR_BUTTONS","REFRESHICON","WINDOWEVENTSHANDLED","zero","isLocalUrl","SIZE","small","medium","large","Window","init","options","visibility","display","position","content","windowContent","windowFrame","globalWindow","offset","isVisible","suppressActions","actions","length","fn","call","appendTo","containment","draggable","first","url","find","remove","is","visible","closest","addClass","_createWindow","title","_dimensions","minTop","minLeft","maxTop","maxLeft","_position","refresh","toFront","children","modal","_overlay","opacity","on","_buttonEnter","_buttonLeave","_windowActionHandler","_keydown","_focus","_blur","_keydownContent","data","windowInstance","document","widgetInstance","not","i","_resizable","pinned","pin","attr","role","aria-labelledby","add","support","mousedown","touchScroller","_resizeHandler","_onDocumentResize","_marker","guid","substring","trigger","notify","_tabKeyTrap","trap","shouldTrap","e","currentTarget","removeClass","width","height","maxHeight","sizeClass","size","dimensions","contentBoxSizing","lrBorderWidth","tbBorderWidth","paddingTop","_isPinned","_updateBoundaries","maxWidth","minWidth","minHeight","hide","containmentTop","containmentLeft","parseFloat","innerWidth","innerHeight","clientWidth","scrollbar","clientHeight","_animationOptions","animation","basicAnimation","open","effects","close","_resize","resize","resizable","resizing","off","destroy","target","toggleMaximization","split","index","handler","append","templates","resizeHandle","dragging","_actions","titlebar","container","windowSpecificCommands","map","action","name","html","render","setOptions","scrollable","doc","cachedOptions","JSON","parse","stringify","_containerScrollTop","_containerScrollLeft","restore","_enableDocumentScrolling","events","zoom","direction","fade","duration","properties","scale","autoFocus","isMaximized","isMinimized","_closable","inArray","keys","keyCode","ESC","_close","handled","newWidth","newHeight","w","h","distance","_closing","altKey","unpin","UP","focus","maximize","DOWN","minimize","getOffset","ctrlKey","LEFT","RIGHT","preventDefault","overlay","insertBefore","toggle","preventScroll","_stopDocumentScrolling","_actionForIcon","icon","iconClass","exec","className","k-i-close","k-i-window-maximize","k-i-window-minimize","k-i-window-restore","k-i-refresh","k-i-pin","k-i-unpin","_modals","zStack","dom","object","_object","sort","a","b","widget","center","newTop","newLeft","documentWindow","_scrollIsAppended","encoded","titleBar","titleElement","arguments","text","htmlEncode","prepend","scrollContainer","angular","elements","empty","push","dataItem","otherModalsVisible","overlayFx","showOptions","contentElement","containmentContext","kendoStop","Fade","fx","fadeIn","endValue","play","show","kendoAnimate","complete","_activate","_removeOverlay","suppressAnimation","modals","hideOverlay","hideOptions","fadeOut","startValue","last","systemTriggered","defaultPrevented","userTriggered","reverse","_deactivate","iframe","blur","lastModal","_actionable","_shouldFocus","active","windowTop","currentWindow","openAnimation","zIndex","originalZIndex","windowObject","zIndexNew","style","setTimeout","shouldRestrictTop","restoreOptions","end","removeAttr","_sizingAction","actionId","callback","eq","before","$body","$html","_storeOverflowRule","_restoreOverflowRule","body","$element","_isOverflowStored","overflowRule","get","overflow","removeData","win","zoomLevel","showIframe","initOptions","src","contentFrame","unbind","_triggerRefresh","_ajaxRequest","toggleClass","_ajaxComplete","clearTimeout","_loadingIconTimeout","_ajaxError","xhr","status","_ajaxSuccess","contentTemplate","prop","_showLoading","ajax","dataType","cache","error","success","_destroy","iframeSrcAttributes","contentHtml","isRtl","getAttribute","editor","prototype","marginTop","marginLeft","hasMargin","wrapperPosition","relativeElMarginLeft","relativeElMarginTop","elementPadding","initialPosition","resizeDirection","replace","initialSize","containerOffset","test","_relativeElMarginLeft","_relativeElMarginTop","rtl","leftRtlOffset","scrollOffset","windowBottom","windowRight","y","newWindowTop","location","reset","initialWindowPosition","initialPointerPosition","startPosition","client","axis","transforms","_finishDrag","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.window.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.window', [\n        'kendo.draganddrop',\n        'kendo.popup'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'window',\n        name: 'Window',\n        category: 'web',\n        description: 'The Window widget displays content in a modal or non-modal HTML window.',\n        depends: [\n            'draganddrop',\n            'popup'\n        ],\n        features: [{\n                id: 'window-fx',\n                name: 'Animation',\n                description: 'Support for animation',\n                depends: ['fx']\n            }]\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, Widget = kendo.ui.Widget, TabKeyTrap = kendo.ui.Popup.TabKeyTrap, Draggable = kendo.ui.Draggable, isPlainObject = $.isPlainObject, activeElement = kendo._activeElement, outerWidth = kendo._outerWidth, outerHeight = kendo._outerHeight, proxy = $.proxy, extend = $.extend, each = $.each, template = kendo.template, BODY = 'body', templates, NS = '.kendoWindow', MODAL_NS = '.kendoWindowModal', KWINDOW = '.k-window', KWINDOWTITLE = '.k-window-title', KWINDOWTITLEBAR = KWINDOWTITLE + 'bar', KWINDOWCONTENT = '.k-window-content', KDIALOGCONTENT = '.k-dialog-content', KWINDOWRESIZEHANDLES = '.k-resize-handle', KOVERLAY = '.k-overlay', KCONTENTFRAME = 'k-content-frame', LOADING = 'k-i-loading', KHOVERSTATE = 'k-state-hover', KFOCUSEDSTATE = 'k-state-focused', MAXIMIZEDSTATE = 'k-window-maximized', INLINE_FLEX = 'k-display-inline-flex', VISIBLE = ':visible', HIDDEN = 'hidden', CURSOR = 'cursor', OPEN = 'open', ACTIVATE = 'activate', DEACTIVATE = 'deactivate', CLOSE = 'close', REFRESH = 'refresh', MINIMIZE = 'minimize', MAXIMIZE = 'maximize', RESIZESTART = 'resizeStart', RESIZE = 'resize', RESIZEEND = 'resizeEnd', DRAGSTART = 'dragstart', DRAGEND = 'dragend', KENDOKEYDOWN = 'kendoKeydown', ERROR = 'error', OVERFLOW = 'overflow', DATADOCOVERFLOWRULE = 'original-overflow-rule', ZINDEX = 'zIndex', MINIMIZE_MAXIMIZE = '.k-window-actions .k-i-window-minimize,.k-window-actions .k-i-window-maximize', KPIN = '.k-i-pin', KUNPIN = '.k-i-unpin', PIN_UNPIN = KPIN + ',' + KUNPIN, TITLEBAR_BUTTONS = '.k-window-titlebar .k-window-action', REFRESHICON = '.k-window-titlebar .k-i-refresh', WINDOWEVENTSHANDLED = 'WindowEventsHandled', zero = /^0[a-z]*$/i, isLocalUrl = kendo.isLocalUrl, SIZE = {\n                small: 'k-window-sm',\n                medium: 'k-window-md',\n                large: 'k-window-lg'\n            };\n        function defined(x) {\n            return typeof x != 'undefined';\n        }\n        function toInt(element, property) {\n            return parseInt(element.css(property), 10) || 0;\n        }\n        function constrain(value, low, high) {\n            var normalizedValue;\n            if (value && isNaN(value) && value.toString().indexOf('px') < 0) {\n                normalizedValue = value;\n            } else {\n                normalizedValue = Math.max(Math.min(parseInt(value, 10), high === Infinity ? high : parseInt(high, 10)), low === -Infinity ? low : parseInt(low, 10));\n            }\n            return normalizedValue;\n        }\n        function executableScript() {\n            return !this.type || this.type.toLowerCase().indexOf('script') >= 0;\n        }\n        function getPosition(elem) {\n            var result = {\n                    top: elem.offsetTop,\n                    left: elem.offsetLeft\n                }, parent = elem.offsetParent;\n            while (parent) {\n                result.top += parent.offsetTop;\n                result.left += parent.offsetLeft;\n                var parentOverflowX = $(parent).css('overflowX');\n                var parentOverflowY = $(parent).css('overflowY');\n                if (parentOverflowY === 'auto' || parentOverflowY === 'scroll') {\n                    result.top -= parent.scrollTop;\n                }\n                if (parentOverflowX === 'auto' || parentOverflowX === 'scroll') {\n                    result.left -= parent.scrollLeft;\n                }\n                parent = parent.offsetParent;\n            }\n            return result;\n        }\n        var Window = Widget.extend({\n            init: function (element, options) {\n                var that = this, wrapper, offset = {}, visibility, display, position, isVisible = false, content, windowContent, windowFrame, globalWindow, suppressActions = options && options.actions && !options.actions.length, id;\n                Widget.fn.init.call(that, element, options);\n                options = that.options;\n                position = options.position;\n                element = that.element;\n                content = options.content;\n                globalWindow = $(window);\n                if (suppressActions) {\n                    options.actions = [];\n                }\n                that.appendTo = $(options.appendTo);\n                that.containment = options.draggable.containment ? $(options.draggable.containment).first() : null;\n                if (content && !isPlainObject(content)) {\n                    content = options.content = { url: content };\n                }\n                element.find('script').filter(executableScript).remove();\n                if (!element.parent().is(that.appendTo) && !that.containment && (position.top === undefined || position.left === undefined)) {\n                    if (element.is(VISIBLE)) {\n                        offset = element.offset();\n                        isVisible = true;\n                    } else {\n                        visibility = element.css('visibility');\n                        display = element.css('display');\n                        element.css({\n                            visibility: HIDDEN,\n                            display: ''\n                        });\n                        offset = element.offset();\n                        element.css({\n                            visibility: visibility,\n                            display: display\n                        });\n                    }\n                    if (position.top === undefined) {\n                        position.top = offset.top;\n                    }\n                    if (position.left === undefined) {\n                        position.left = offset.left;\n                    }\n                }\n                if (!defined(options.visible) || options.visible === null) {\n                    options.visible = element.is(VISIBLE);\n                }\n                wrapper = that.wrapper = element.closest(KWINDOW);\n                if (!element.is('.k-window-content') || !wrapper[0]) {\n                    element.addClass('k-window-content');\n                    that._createWindow(element, options);\n                    wrapper = that.wrapper = element.closest(KWINDOW);\n                    that.title(that.options.title);\n                    that._dimensions();\n                }\n                that.minTop = that.minLeft = -Infinity;\n                that.maxTop = that.maxLeft = Infinity;\n                that._position();\n                if (content) {\n                    that.refresh(content);\n                }\n                if (options.visible) {\n                    that.toFront();\n                }\n                windowContent = wrapper.children(KWINDOWCONTENT);\n                if (options.visible && options.modal) {\n                    that._overlay(wrapper.is(VISIBLE)).css({ opacity: 0.5 });\n                }\n                wrapper.on('mouseenter' + NS, TITLEBAR_BUTTONS, proxy(that._buttonEnter, that)).on('mouseleave' + NS, TITLEBAR_BUTTONS, proxy(that._buttonLeave, that)).on('click' + NS, '> ' + TITLEBAR_BUTTONS, proxy(that._windowActionHandler, that)).on('keydown' + NS, that, proxy(that._keydown, that)).on('focus' + NS, proxy(that._focus, that)).on('blur' + NS, proxy(that._blur, that));\n                windowContent.on('keydown' + NS, that, proxy(that._keydownContent, that));\n                windowFrame = windowContent.find('.' + KCONTENTFRAME)[0];\n                if (windowFrame && !globalWindow.data(WINDOWEVENTSHANDLED)) {\n                    globalWindow.on('blur' + NS, function () {\n                        var element = $(document.activeElement).parent(KWINDOWCONTENT);\n                        if (element.length) {\n                            var windowInstance = kendo.widgetInstance(element);\n                            windowInstance._focus();\n                        }\n                    });\n                    globalWindow.on('focus' + NS, function () {\n                        $(KWINDOWCONTENT).not(KDIALOGCONTENT).each(function (i, element) {\n                            kendo.widgetInstance($(element))._blur();\n                        });\n                    });\n                    globalWindow.data(WINDOWEVENTSHANDLED, true);\n                }\n                this._resizable();\n                this._draggable();\n                if (options.pinned && this.wrapper.is(':visible')) {\n                    that.pin();\n                }\n                id = element.attr('id');\n                if (id) {\n                    id = id + '_wnd_title';\n                    wrapper.children(KWINDOWTITLEBAR).children(KWINDOWTITLE).attr('id', id);\n                    windowContent.attr({\n                        'role': 'dialog',\n                        'aria-labelledby': id\n                    });\n                }\n                wrapper.add(wrapper.children('.k-resize-handle,' + KWINDOWTITLEBAR)).on(kendo.support.mousedown + NS, proxy(that.toFront, that));\n                that.touchScroller = kendo.touchScroller(element);\n                that._resizeHandler = proxy(that._onDocumentResize, that);\n                that._marker = kendo.guid().substring(0, 8);\n                $(window).on('resize' + NS + that._marker, that._resizeHandler);\n                if (options.visible) {\n                    that.trigger(OPEN);\n                    that.trigger(ACTIVATE);\n                }\n                kendo.notify(that);\n                if (this.options.modal) {\n                    this._tabKeyTrap = new TabKeyTrap(wrapper);\n                    this._tabKeyTrap.trap();\n                    this._tabKeyTrap.shouldTrap = function () {\n                        return wrapper.data('isFront');\n                    };\n                }\n            },\n            _buttonEnter: function (e) {\n                $(e.currentTarget).addClass(KHOVERSTATE);\n            },\n            _buttonLeave: function (e) {\n                $(e.currentTarget).removeClass(KHOVERSTATE);\n            },\n            _focus: function () {\n                this.wrapper.addClass(KFOCUSEDSTATE);\n            },\n            _blur: function () {\n                this.wrapper.removeClass(KFOCUSEDSTATE);\n            },\n            _dimensions: function () {\n                var wrapper = this.wrapper;\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var maxHeight = options.maxHeight;\n                var sizeClass = options.size;\n                var dimensions = [\n                    'minWidth',\n                    'minHeight',\n                    'maxWidth',\n                    'maxHeight'\n                ];\n                var contentBoxSizing = wrapper.css('box-sizing') == 'content-box';\n                var lrBorderWidth = contentBoxSizing ? toInt(wrapper, 'border-left-width') + toInt(wrapper, 'border-right-width') : 0;\n                var tbBorderWidth = contentBoxSizing ? toInt(wrapper, 'border-top-width') + toInt(wrapper, 'border-bottom-width') : 0;\n                var paddingTop = contentBoxSizing ? toInt(wrapper, 'padding-top') : 0;\n                if (this.containment && !this._isPinned) {\n                    this._updateBoundaries();\n                    options.maxHeight = Math.min(this.containment.height - (tbBorderWidth + paddingTop), maxHeight);\n                    options.maxWidth = Math.min(this.containment.width - lrBorderWidth, options.maxWidth);\n                }\n                for (var i = 0; i < dimensions.length; i++) {\n                    var value = options[dimensions[i]] || '';\n                    if (value != Infinity) {\n                        wrapper.css(dimensions[i], value);\n                    }\n                }\n                if (maxHeight != Infinity) {\n                    this.element.css('maxHeight', maxHeight);\n                }\n                if (width) {\n                    wrapper.outerWidth(constrain(width, options.minWidth, options.maxWidth));\n                } else {\n                    wrapper.outerWidth('');\n                }\n                if (height) {\n                    wrapper.outerHeight(constrain(height, options.minHeight, options.maxHeight));\n                } else {\n                    wrapper.outerHeight('');\n                }\n                if (!options.visible) {\n                    wrapper.removeClass(INLINE_FLEX).hide();\n                }\n                if (sizeClass && SIZE[sizeClass]) {\n                    wrapper.addClass(SIZE[sizeClass]);\n                }\n            },\n            _position: function () {\n                var wrapper = this.wrapper, position = this.options.position, containmentTop, containmentLeft;\n                this._updateBoundaries();\n                if (this.containment) {\n                    position.top = position.top || 0;\n                    position.left = position.left || 0;\n                    containmentTop = position.top.toString().indexOf('%') > 0 ? parseInt(this.containment.height * (parseFloat(position.top) / 100), 10) : position.top;\n                    containmentLeft = position.left.toString().indexOf('%') > 0 ? parseInt(this.containment.width * (parseFloat(position.left) / 100), 10) : position.left;\n                    position.top = constrain(containmentTop, this.minTop, this.maxTop);\n                    position.left = constrain(containmentLeft, this.minLeft, this.maxLeft);\n                }\n                if (position.top === 0) {\n                    position.top = position.top.toString();\n                }\n                if (position.left === 0) {\n                    position.left = position.left.toString();\n                }\n                wrapper.css({\n                    top: position.top || '',\n                    left: position.left || ''\n                });\n            },\n            _updateBoundaries: function () {\n                var containment = this.containment;\n                if (!containment) {\n                    return null;\n                }\n                containment.width = containment.innerWidth();\n                containment.height = containment.innerHeight();\n                if (parseInt(containment.width, 10) > containment[0].clientWidth) {\n                    containment.width -= kendo.support.scrollbar();\n                }\n                if (parseInt(containment.height, 10) > containment[0].clientHeight) {\n                    containment.height -= kendo.support.scrollbar();\n                }\n                containment.position = getPosition(containment[0]);\n                if (this._isPinned) {\n                    this.minTop = this.minLeft = -Infinity;\n                    this.maxTop = this.maxLeft = Infinity;\n                } else {\n                    this.minTop = containment.scrollTop();\n                    this.minLeft = containment.scrollLeft();\n                    this.maxLeft = this.minLeft + containment.width - outerWidth(this.wrapper, true);\n                    this.maxTop = this.minTop + containment.height - outerHeight(this.wrapper, true);\n                }\n            },\n            _animationOptions: function (id) {\n                var animation = this.options.animation;\n                var basicAnimation = {\n                    open: { effects: {} },\n                    close: {\n                        hide: true,\n                        effects: {}\n                    }\n                };\n                return animation && animation[id] || basicAnimation[id];\n            },\n            _resize: function () {\n                kendo.resize(this.element.children());\n            },\n            _resizable: function () {\n                var resizable = this.options.resizable;\n                var wrapper = this.wrapper;\n                if (this.resizing) {\n                    wrapper.off('dblclick' + NS).children(KWINDOWRESIZEHANDLES).remove();\n                    this.resizing.destroy();\n                    this.resizing = null;\n                }\n                if (resizable) {\n                    wrapper.on('dblclick' + NS, KWINDOWTITLEBAR, proxy(function (e) {\n                        if (!$(e.target).closest('.k-window-action').length) {\n                            this.toggleMaximization();\n                        }\n                    }, this));\n                    each('n e s w se sw ne nw'.split(' '), function (index, handler) {\n                        wrapper.append(templates.resizeHandle(handler));\n                    });\n                    this.resizing = new WindowResizing(this);\n                }\n                wrapper = null;\n            },\n            _draggable: function () {\n                var draggable = this.options.draggable;\n                if (this.dragging) {\n                    this.dragging.destroy();\n                    this.dragging = null;\n                }\n                if (draggable) {\n                    this.dragging = new WindowDragging(this, draggable.dragHandle || KWINDOWTITLEBAR);\n                }\n            },\n            _actions: function () {\n                var options = this.options;\n                var actions = options.actions;\n                var pinned = options.pinned;\n                var titlebar = this.wrapper.children(KWINDOWTITLEBAR);\n                var container = titlebar.find('.k-window-actions');\n                var windowSpecificCommands = [\n                    'maximize',\n                    'minimize'\n                ];\n                actions = $.map(actions, function (action) {\n                    action = pinned && action.toLowerCase() === 'pin' ? 'unpin' : action;\n                    return { name: windowSpecificCommands.indexOf(action.toLowerCase()) > -1 ? 'window-' + action : action };\n                });\n                container.html(kendo.render(templates.action, actions));\n            },\n            setOptions: function (options) {\n                var that = this;\n                var sizeClass = that.options.size;\n                var doc = this.containment && !that._isPinned ? this.containment : $(document);\n                var cachedOptions = JSON.parse(JSON.stringify(options));\n                extend(options.position, that.options.position);\n                extend(options.position, cachedOptions.position);\n                that._containerScrollTop = doc.scrollTop();\n                that._containerScrollLeft = doc.scrollLeft();\n                Widget.fn.setOptions.call(that, options);\n                var scrollable = that.options.scrollable !== false;\n                that.restore();\n                if (typeof options.title !== 'undefined') {\n                    that.title(options.title);\n                }\n                that.wrapper.removeClass(SIZE[sizeClass]);\n                that._dimensions();\n                that._position();\n                that._resizable();\n                that._draggable();\n                that._actions();\n                if (typeof options.modal !== 'undefined') {\n                    var visible = that.options.visible !== false;\n                    that._enableDocumentScrolling();\n                    that._overlay(options.modal && visible);\n                }\n                that.element.css(OVERFLOW, scrollable ? '' : 'hidden');\n            },\n            events: [\n                OPEN,\n                ACTIVATE,\n                DEACTIVATE,\n                CLOSE,\n                MINIMIZE,\n                MAXIMIZE,\n                REFRESH,\n                RESIZESTART,\n                RESIZE,\n                RESIZEEND,\n                DRAGSTART,\n                DRAGEND,\n                KENDOKEYDOWN,\n                ERROR\n            ],\n            options: {\n                name: 'Window',\n                animation: {\n                    open: {\n                        effects: {\n                            zoom: { direction: 'in' },\n                            fade: { direction: 'in' }\n                        },\n                        duration: 350\n                    },\n                    close: {\n                        effects: {\n                            zoom: {\n                                direction: 'out',\n                                properties: { scale: 0.7 }\n                            },\n                            fade: { direction: 'out' }\n                        },\n                        duration: 350,\n                        hide: true\n                    }\n                },\n                title: '',\n                actions: ['Close'],\n                autoFocus: true,\n                modal: false,\n                size: 'auto',\n                resizable: true,\n                draggable: true,\n                minWidth: 90,\n                minHeight: 50,\n                maxWidth: Infinity,\n                maxHeight: Infinity,\n                pinned: false,\n                scrollable: true,\n                position: {},\n                content: null,\n                visible: null,\n                height: null,\n                width: null,\n                appendTo: 'body',\n                isMaximized: false,\n                isMinimized: false\n            },\n            _closable: function () {\n                return $.inArray('close', $.map(this.options.actions, function (x) {\n                    return x.toLowerCase();\n                })) > -1;\n            },\n            _keydownContent: function (e) {\n                var that = this, keys = kendo.keys, keyCode = e.keyCode;\n                if (keyCode == keys.ESC && that._closable()) {\n                    e.stopPropagation();\n                    that._close(false);\n                }\n            },\n            _keydown: function (e) {\n                var that = this, options = that.options, keys = kendo.keys, keyCode = e.keyCode, wrapper = that.wrapper, offset, handled, distance = 10, isMaximized = options.isMaximized, isMinimized = options.isMinimized, newWidth, newHeight, w, h;\n                if (keyCode == keys.ESC && that._closable()) {\n                    e.stopPropagation();\n                    that._close(false);\n                }\n                if (e.target != e.currentTarget || that._closing) {\n                    return;\n                }\n                if (e.altKey && keyCode == 82) {\n                    that.refresh();\n                }\n                if (e.altKey && keyCode == 80) {\n                    if (that.options.pinned) {\n                        that.unpin();\n                    } else {\n                        that.pin();\n                    }\n                }\n                if (e.altKey && keyCode == keys.UP) {\n                    if (isMinimized) {\n                        that.restore();\n                        that.wrapper.focus();\n                    } else if (!isMaximized) {\n                        that.maximize();\n                        that.wrapper.focus();\n                    }\n                } else if (e.altKey && keyCode == keys.DOWN) {\n                    if (!isMinimized && !isMaximized) {\n                        that.minimize();\n                        that.wrapper.focus();\n                    } else if (isMaximized) {\n                        that.restore();\n                    }\n                }\n                offset = kendo.getOffset(wrapper);\n                if (that.containment && !that._isPinned) {\n                    offset = that.options.position;\n                }\n                if (options.draggable && !e.ctrlKey && !e.altKey && !isMaximized) {\n                    that._updateBoundaries();\n                    if (keyCode == keys.UP) {\n                        offset.top = constrain(offset.top - distance, that.minTop, that.maxTop);\n                        handled = wrapper.css('top', offset.top);\n                    } else if (keyCode == keys.DOWN) {\n                        offset.top = constrain(offset.top + distance, that.minTop, that.maxTop);\n                        handled = wrapper.css('top', offset.top);\n                    } else if (keyCode == keys.LEFT) {\n                        offset.left = constrain(offset.left - distance, that.minLeft, that.maxLeft);\n                        handled = wrapper.css('left', offset.left);\n                    } else if (keyCode == keys.RIGHT) {\n                        offset.left = constrain(offset.left + distance, that.minLeft, that.maxLeft);\n                        handled = wrapper.css('left', offset.left);\n                    }\n                }\n                if (options.resizable && e.ctrlKey && !isMaximized && !isMinimized) {\n                    if (keyCode == keys.UP) {\n                        handled = true;\n                        newHeight = wrapper.outerHeight() - distance;\n                    } else if (keyCode == keys.DOWN) {\n                        handled = true;\n                        if (that.containment && !that._isPinned) {\n                            newHeight = Math.min(wrapper.outerHeight() + distance, that.containment.height - offset.top - toInt(wrapper, 'padding-top') - toInt(wrapper, 'borderBottomWidth') - toInt(wrapper, 'borderTopWidth'));\n                        } else {\n                            newHeight = wrapper.outerHeight() + distance;\n                        }\n                    }\n                    if (keyCode == keys.LEFT) {\n                        handled = true;\n                        newWidth = wrapper.outerWidth() - distance;\n                    } else if (keyCode == keys.RIGHT) {\n                        handled = true;\n                        if (that.containment && !that._isPinned) {\n                            newWidth = Math.min(wrapper.outerWidth() + distance, that.containment.width - offset.left - toInt(wrapper, 'borderLeftWidth') - toInt(wrapper, 'borderRightWidth'));\n                        } else {\n                            newWidth = wrapper.outerWidth() + distance;\n                        }\n                    }\n                    if (handled) {\n                        w = constrain(newWidth, options.minWidth, options.maxWidth);\n                        h = constrain(newHeight, options.minHeight, options.maxHeight);\n                        if (!isNaN(w)) {\n                            wrapper.outerWidth(w);\n                            that.options.width = w + 'px';\n                        }\n                        if (!isNaN(h)) {\n                            wrapper.outerHeight(h);\n                            that.options.height = h + 'px';\n                        }\n                        that.resize();\n                    }\n                }\n                if (handled) {\n                    e.preventDefault();\n                }\n            },\n            _overlay: function (visible) {\n                var overlay = this.containment ? this.containment.children(KOVERLAY) : this.appendTo.children(KOVERLAY), wrapper = this.wrapper;\n                if (!overlay.length) {\n                    overlay = $('<div class=\\'k-overlay\\' />');\n                }\n                overlay.insertBefore(wrapper[0]).toggle(visible).css(ZINDEX, parseInt(wrapper.css(ZINDEX), 10) - 1);\n                if (this.options.modal.preventScroll && !this.containment) {\n                    this._stopDocumentScrolling();\n                }\n                return overlay;\n            },\n            _actionForIcon: function (icon) {\n                var iconClass = /\\bk-i(-\\w+)+\\b/.exec(icon[0].className)[0];\n                return {\n                    'k-i-close': '_close',\n                    'k-i-window-maximize': 'maximize',\n                    'k-i-window-minimize': 'minimize',\n                    'k-i-window-restore': 'restore',\n                    'k-i-refresh': 'refresh',\n                    'k-i-pin': 'pin',\n                    'k-i-unpin': 'unpin'\n                }[iconClass];\n            },\n            _windowActionHandler: function (e) {\n                if (this._closing) {\n                    return;\n                }\n                var icon = $(e.target).closest('.k-window-action').find('.k-icon');\n                var action = this._actionForIcon(icon);\n                if (action) {\n                    e.preventDefault();\n                    this[action]();\n                    return false;\n                }\n            },\n            _modals: function () {\n                var that = this;\n                var zStack = $(KWINDOW).filter(function () {\n                    var dom = $(this);\n                    var object = that._object(dom);\n                    var options = object && object.options;\n                    return options && options.modal && options.visible && options.appendTo === that.options.appendTo && dom.is(VISIBLE);\n                }).sort(function (a, b) {\n                    return +$(a).css('zIndex') - +$(b).css('zIndex');\n                });\n                that = null;\n                return zStack;\n            },\n            _object: function (element) {\n                var content = element.children(KWINDOWCONTENT);\n                var widget = kendo.widgetInstance(content);\n                if (widget) {\n                    return widget;\n                }\n                return undefined;\n            },\n            center: function () {\n                var that = this, position = that.options.position, wrapper = that.wrapper, documentWindow = $(window), scrollTop = 0, scrollLeft = 0, newTop, newLeft;\n                if (that.options.isMaximized) {\n                    return that;\n                }\n                if (that.options.pinned && !that._isPinned) {\n                    that.pin();\n                }\n                if (!that.options.pinned) {\n                    scrollTop = documentWindow.scrollTop();\n                    scrollLeft = documentWindow.scrollLeft();\n                }\n                if (this.containment && !that.options.pinned) {\n                    newTop = this.minTop + (this.maxTop - this.minTop) / 2;\n                    newLeft = this.minLeft + (this.maxLeft - this.minLeft) / 2;\n                } else {\n                    that._scrollIsAppended = true;\n                    newLeft = scrollLeft + Math.max(0, (documentWindow.width() - wrapper.outerWidth()) / 2);\n                    newTop = scrollTop + Math.max(0, (documentWindow.height() - wrapper.outerHeight() - toInt(wrapper, 'paddingTop')) / 2);\n                }\n                wrapper.css({\n                    left: newLeft,\n                    top: newTop\n                });\n                position.top = newTop;\n                position.left = newLeft;\n                return that;\n            },\n            title: function (title) {\n                var that = this, value, encoded = true, wrapper = that.wrapper, titleBar = wrapper.children(KWINDOWTITLEBAR), titleElement = titleBar.children(KWINDOWTITLE);\n                if (!arguments.length) {\n                    return titleElement.html();\n                }\n                if ($.isPlainObject(title)) {\n                    value = typeof title.text !== 'undefined' ? title.text : '';\n                    encoded = title.encoded !== false;\n                } else {\n                    value = title;\n                }\n                if (value === false) {\n                    wrapper.addClass('k-window-titleless');\n                    wrapper.css('padding-top', 0);\n                    titleBar.remove();\n                } else {\n                    if (!titleBar.length) {\n                        wrapper.prepend(templates.titlebar({ title: encoded ? kendo.htmlEncode(value) : value }));\n                        that._actions();\n                        titleBar = wrapper.children(KWINDOWTITLEBAR);\n                    } else {\n                        titleElement.html(encoded ? kendo.htmlEncode(value) : value);\n                    }\n                }\n                that.options.title = value;\n                return that;\n            },\n            content: function (html, data) {\n                var content = this.wrapper.children(KWINDOWCONTENT), scrollContainer = content.children('.km-scroll-container');\n                content = scrollContainer[0] ? scrollContainer : content;\n                if (!defined(html)) {\n                    return content.html();\n                }\n                this.angular('cleanup', function () {\n                    return { elements: content.children() };\n                });\n                kendo.destroy(this.element.children());\n                content.empty().html(html);\n                this.angular('compile', function () {\n                    var a = [];\n                    for (var i = content.length; --i >= 0;) {\n                        a.push({ dataItem: data });\n                    }\n                    return {\n                        elements: content.children(),\n                        data: a\n                    };\n                });\n                return this;\n            },\n            open: function () {\n                var that = this, wrapper = that.wrapper, options = that.options, showOptions = this._animationOptions('open'), contentElement = wrapper.children(KWINDOWCONTENT), overlay, otherModalsVisible, containmentContext = this.containment && !that._isPinned, doc = containmentContext ? this.containment : $(document);\n                if (!that.trigger(OPEN)) {\n                    if (that._closing) {\n                        wrapper.kendoStop(true, true);\n                    }\n                    that._closing = false;\n                    that.toFront();\n                    if (options.autoFocus) {\n                        that.wrapper.focus();\n                    }\n                    options.visible = true;\n                    if (options.modal) {\n                        otherModalsVisible = !!that._modals().length;\n                        overlay = that._overlay(otherModalsVisible);\n                        overlay.kendoStop(true, true);\n                        if (showOptions.duration && kendo.effects.Fade && !otherModalsVisible) {\n                            var overlayFx = kendo.fx(overlay).fadeIn();\n                            overlayFx.duration(showOptions.duration || 0);\n                            overlayFx.endValue(0.5);\n                            overlayFx.play();\n                        } else {\n                            overlay.css('opacity', 0.5);\n                        }\n                        overlay.show();\n                        $(window).on('focus' + MODAL_NS, function () {\n                            if (wrapper.data('isFront') && !$(document.activeElement).closest(wrapper).length) {\n                                that.wrapper.focus();\n                            }\n                        });\n                    }\n                    if (!wrapper.is(VISIBLE)) {\n                        contentElement.css(OVERFLOW, HIDDEN);\n                        that.wrapper.find(TITLEBAR_BUTTONS).addClass('k-flat');\n                        wrapper.addClass(INLINE_FLEX).kendoStop().kendoAnimate({\n                            effects: showOptions.effects,\n                            duration: showOptions.duration,\n                            complete: proxy(this._activate, this)\n                        });\n                    }\n                }\n                if (options.isMaximized) {\n                    that._containerScrollTop = doc.scrollTop();\n                    that._containerScrollLeft = doc.scrollLeft();\n                    that._stopDocumentScrolling();\n                }\n                if (this.options.pinned && !this._isPinned) {\n                    this.pin();\n                }\n                return that;\n            },\n            _activate: function () {\n                var scrollable = this.options.scrollable !== false;\n                if (this.options.autoFocus) {\n                    this.wrapper.focus();\n                }\n                this.element.css(OVERFLOW, scrollable ? '' : 'hidden');\n                kendo.resize(this.element.children());\n                this.trigger(ACTIVATE);\n            },\n            _removeOverlay: function (suppressAnimation) {\n                var modals = this._modals();\n                var options = this.options;\n                var hideOverlay = options.modal && !modals.length;\n                var overlay = options.modal ? this._overlay(true) : $(undefined);\n                var hideOptions = this._animationOptions('close');\n                if (hideOverlay) {\n                    if (!suppressAnimation && hideOptions.duration && kendo.effects.Fade) {\n                        var overlayFx = kendo.fx(overlay).fadeOut();\n                        overlayFx.duration(hideOptions.duration || 0);\n                        overlayFx.startValue(0.5);\n                        overlayFx.play();\n                    } else {\n                        this._overlay(false).remove();\n                    }\n                    if (options.modal.preventScroll) {\n                        this._enableDocumentScrolling();\n                    }\n                } else if (modals.length) {\n                    this._object(modals.last())._overlay(true);\n                    if (options.modal.preventScroll) {\n                        this._stopDocumentScrolling();\n                    }\n                }\n            },\n            _close: function (systemTriggered) {\n                var that = this, wrapper = that.wrapper, options = that.options, showOptions = this._animationOptions('open'), hideOptions = this._animationOptions('close'), containmentContext = this.containment && !that._isPinned, doc = containmentContext ? this.containment : $(document), defaultPrevented;\n                if (that._closing) {\n                    return;\n                }\n                defaultPrevented = that.trigger(CLOSE, { userTriggered: !systemTriggered });\n                that._closing = !defaultPrevented;\n                if (wrapper.is(VISIBLE) && !defaultPrevented) {\n                    options.visible = false;\n                    $(KWINDOW).each(function (i, element) {\n                        var contentElement = $(element).children(KWINDOWCONTENT);\n                        if (element != wrapper && contentElement.find('> .' + KCONTENTFRAME).length > 0) {\n                            contentElement.children(KOVERLAY).remove();\n                        }\n                    });\n                    this._removeOverlay();\n                    that.wrapper.find(TITLEBAR_BUTTONS).removeClass('k-flat');\n                    wrapper.kendoStop().kendoAnimate({\n                        effects: hideOptions.effects || showOptions.effects,\n                        reverse: hideOptions.reverse === true,\n                        duration: hideOptions.duration,\n                        complete: proxy(this._deactivate, this)\n                    });\n                    $(window).off(MODAL_NS);\n                }\n                if (that.options.isMaximized) {\n                    that._enableDocumentScrolling();\n                    if (that._containerScrollTop && that._containerScrollTop > 0) {\n                        doc.scrollTop(that._containerScrollTop);\n                    }\n                    if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                        doc.scrollLeft(that._containerScrollLeft);\n                    }\n                }\n                if (that.options.iframe) {\n                    that.wrapper.blur();\n                }\n            },\n            _deactivate: function () {\n                var that = this;\n                that.wrapper.removeClass(INLINE_FLEX).hide().css('opacity', '');\n                that.trigger(DEACTIVATE);\n                if (that.options.modal) {\n                    var lastModal = that._object(that._modals().last());\n                    if (lastModal) {\n                        lastModal.toFront();\n                    }\n                }\n            },\n            close: function () {\n                this._close(true);\n                return this;\n            },\n            _actionable: function (element) {\n                return $(element).is(TITLEBAR_BUTTONS + ',' + TITLEBAR_BUTTONS + ' .k-icon,:input,a');\n            },\n            _shouldFocus: function (target) {\n                var active = activeElement(), element = this.wrapper;\n                return this.options.autoFocus && !$(active).is(element) && !this._actionable(target) && (!element.find(active).length || !element.find(target).length);\n            },\n            toFront: function (e) {\n                var that = this, wrapper = that.wrapper, currentWindow = wrapper[0], containmentContext = that.containment && !that._isPinned, openAnimation = this._animationOptions('open'), zIndex = +wrapper.css(ZINDEX), originalZIndex = zIndex, target = e && e.target || null;\n                $(KWINDOW).each(function (i, element) {\n                    var windowObject = $(element), zIndexNew = windowObject.css(ZINDEX), contentElement = windowObject.children(KWINDOWCONTENT);\n                    if (!isNaN(zIndexNew)) {\n                        zIndex = Math.max(+zIndexNew, zIndex);\n                    }\n                    wrapper.data('isFront', element == currentWindow);\n                    if (element != currentWindow && contentElement.find('.' + KCONTENTFRAME).length && !contentElement.find(KOVERLAY).length) {\n                        contentElement.append(templates.overlay);\n                    }\n                });\n                if (!wrapper[0].style.zIndex || originalZIndex < zIndex) {\n                    wrapper.css(ZINDEX, zIndex + 2);\n                }\n                that.element.find('> .k-overlay').remove();\n                if (that._shouldFocus(target)) {\n                    setTimeout(function () {\n                        that.wrapper.focus();\n                    }, openAnimation ? openAnimation.duration : 0);\n                    var scrollTop = containmentContext ? that.containment.scrollTop() : $(window).scrollTop(), windowTop = parseInt(wrapper.position().top, 10);\n                    if (!that.options.pinned && windowTop > 0 && windowTop < scrollTop) {\n                        if (scrollTop > 0) {\n                            $(window).scrollTop(windowTop);\n                        } else {\n                            wrapper.css('top', scrollTop);\n                        }\n                    }\n                }\n                wrapper = null;\n                return that;\n            },\n            toggleMaximization: function () {\n                if (this._closing) {\n                    return this;\n                }\n                return this[this.options.isMaximized ? 'restore' : 'maximize']();\n            },\n            restore: function () {\n                var that = this;\n                var options = that.options;\n                var minHeight = options.minHeight;\n                var restoreOptions = that.restoreOptions;\n                var shouldRestrictTop;\n                var container = that.containment && !that._isPinned ? that.containment : $(document);\n                if (!options.isMaximized && !options.isMinimized) {\n                    return that;\n                }\n                if (minHeight && minHeight != Infinity) {\n                    that.wrapper.css('min-height', minHeight);\n                }\n                if (restoreOptions && !options.isMaximized) {\n                    restoreOptions.height = constrain(restoreOptions.height, that.options.minHeight, that.options.maxHeight);\n                    shouldRestrictTop = options.position.top + parseInt(restoreOptions.height, 10) > that.maxTop;\n                    if (shouldRestrictTop) {\n                        options.position.top = constrain(options.position.top, that.minTop, that.maxTop - parseInt(restoreOptions.height, 10));\n                        extend(restoreOptions, {\n                            left: options.position.left,\n                            top: options.position.top\n                        });\n                    }\n                }\n                that.wrapper.css({\n                    position: options.pinned ? 'fixed' : 'absolute',\n                    left: restoreOptions.left,\n                    top: restoreOptions.top,\n                    width: restoreOptions.width,\n                    height: restoreOptions.height\n                }).removeClass(MAXIMIZEDSTATE).find('.k-window-content,.k-resize-handle').show().end().find('.k-window-titlebar .k-i-window-restore').parent().remove().end().end().find(MINIMIZE_MAXIMIZE).parent().show().end().end().find(PIN_UNPIN).parent().show();\n                if (options.isMaximized) {\n                    that.wrapper.find('.k-i-window-maximize').parent().focus();\n                } else if (options.isMinimized) {\n                    that.wrapper.find('.k-i-window-minimize').parent().focus();\n                }\n                that.options.width = restoreOptions.width;\n                that.options.height = restoreOptions.height;\n                if (!that.options.modal.preventScroll) {\n                    that._enableDocumentScrolling();\n                }\n                if (that._containerScrollTop && that._containerScrollTop > 0) {\n                    container.scrollTop(that._containerScrollTop);\n                }\n                if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                    container.scrollLeft(that._containerScrollLeft);\n                }\n                options.isMaximized = options.isMinimized = false;\n                that.wrapper.removeAttr('aria-labelled-by');\n                that.resize();\n                return that;\n            },\n            _sizingAction: function (actionId, callback) {\n                var that = this, wrapper = that.wrapper, style = wrapper[0].style, options = that.options;\n                if (options.isMaximized || options.isMinimized) {\n                    return that;\n                }\n                that.restoreOptions = {\n                    width: style.width,\n                    height: style.height\n                };\n                wrapper.children(KWINDOWRESIZEHANDLES).hide().end().children(KWINDOWTITLEBAR).find(MINIMIZE_MAXIMIZE).parent().hide().eq(0).before(templates.action({ name: 'window-restore' }));\n                callback.call(that);\n                that.wrapper.children(KWINDOWTITLEBAR).find(PIN_UNPIN).parent().toggle(actionId !== 'maximize');\n                that.trigger(actionId);\n                wrapper.find('.k-i-window-restore').parent().focus();\n                return that;\n            },\n            maximize: function () {\n                this._sizingAction('maximize', function () {\n                    var that = this, wrapper = that.wrapper, containmentContext = this.containment && !that._isPinned, position = wrapper.position(), doc = $(document);\n                    extend(that.restoreOptions, {\n                        left: position.left + (containmentContext ? this.containment.scrollLeft() : 0),\n                        top: position.top + (containmentContext ? this.containment.scrollTop() : 0)\n                    });\n                    this._containerScrollTop = containmentContext ? this.containment.scrollTop() : doc.scrollTop();\n                    this._containerScrollLeft = containmentContext ? this.containment.scrollLeft() : doc.scrollLeft();\n                    that._stopDocumentScrolling();\n                    wrapper.css({\n                        top: containmentContext ? this.containment.scrollTop() : 0,\n                        left: containmentContext ? this.containment.scrollLeft() : 0,\n                        position: containmentContext ? 'absolute' : 'fixed'\n                    }).addClass(MAXIMIZEDSTATE);\n                    that.options.isMaximized = true;\n                    that._onDocumentResize();\n                });\n                return this;\n            },\n            _stopDocumentScrolling: function () {\n                var that = this;\n                var containment = that.containment;\n                if (containment && !that._isPinned) {\n                    that._storeOverflowRule(containment);\n                    containment.css(OVERFLOW, HIDDEN);\n                    that.wrapper.css({\n                        maxWidth: containment.innerWidth(),\n                        maxHeight: containment.innerHeight()\n                    });\n                    return;\n                }\n                var $body = $('body');\n                that._storeOverflowRule($body);\n                $body.css(OVERFLOW, HIDDEN);\n                var $html = $('html');\n                that._storeOverflowRule($html);\n                $html.css(OVERFLOW, HIDDEN);\n            },\n            _enableDocumentScrolling: function () {\n                var that = this;\n                var containment = that.containment;\n                if (containment && !that._isPinned) {\n                    that._restoreOverflowRule(containment);\n                    that.wrapper.css({\n                        maxWidth: containment.width,\n                        maxHeight: containment.height\n                    });\n                    return;\n                }\n                that._restoreOverflowRule($(document.body));\n                that._restoreOverflowRule($('html'));\n            },\n            _storeOverflowRule: function ($element) {\n                if (this._isOverflowStored($element)) {\n                    return;\n                }\n                var overflowRule = $element.get(0).style.overflow;\n                if (typeof overflowRule === 'string') {\n                    $element.data(DATADOCOVERFLOWRULE, overflowRule);\n                }\n            },\n            _isOverflowStored: function ($element) {\n                return typeof $element.data(DATADOCOVERFLOWRULE) === 'string';\n            },\n            _restoreOverflowRule: function ($element) {\n                var overflowRule = $element.data(DATADOCOVERFLOWRULE);\n                if (overflowRule !== null && overflowRule !== undefined) {\n                    $element.css(OVERFLOW, overflowRule);\n                    $element.removeData(DATADOCOVERFLOWRULE);\n                } else {\n                    $element.css(OVERFLOW, '');\n                }\n            },\n            isMaximized: function () {\n                return this.options.isMaximized;\n            },\n            minimize: function () {\n                this._sizingAction('minimize', function () {\n                    var that = this;\n                    that.wrapper.css({\n                        height: '',\n                        minHeight: ''\n                    });\n                    that.element.hide();\n                    that.options.isMinimized = true;\n                });\n                this.wrapper.attr('aria-labelled-by', this.element.attr('aria-labelled-by'));\n                this._updateBoundaries();\n                return this;\n            },\n            isMinimized: function () {\n                return this.options.isMinimized;\n            },\n            pin: function () {\n                var that = this, win = $(window), wrapper = that.wrapper, options = that.options, position = options.position, top = this.containment ? getPosition(wrapper[0]).top + toInt(this.containment, 'borderTopWidth') : toInt(wrapper, 'top'), left = this.containment ? getPosition(wrapper[0]).left + toInt(this.containment, 'borderLeftWidth') : toInt(wrapper, 'left');\n                if (!that.options.isMaximized) {\n                    position.top = top;\n                    position.left = left;\n                    if (that._scrollIsAppended && (!this.containment || this.containment.css('position') !== 'fixed')) {\n                        position.top -= win.scrollTop();\n                        position.left -= win.scrollLeft();\n                        that._scrollIsAppended = false;\n                    }\n                    wrapper.css(extend(position, { position: 'fixed' }));\n                    wrapper.children(KWINDOWTITLEBAR).find(KPIN).addClass('k-i-unpin').removeClass('k-i-pin');\n                    that._isPinned = true;\n                    that.options.pinned = true;\n                    if (this.containment) {\n                        options.maxWidth = options.maxHeight = Infinity;\n                        wrapper.css({\n                            maxWidth: '',\n                            maxHeight: ''\n                        });\n                    }\n                }\n            },\n            unpin: function () {\n                var that = this, win = $(window), wrapper = that.wrapper, options = that.options, position = that.options.position, containment = that.containment, top = parseInt(wrapper.css('top'), 10) + win.scrollTop(), left = parseInt(wrapper.css('left'), 10) + win.scrollLeft();\n                if (!that.options.isMaximized) {\n                    that._isPinned = false;\n                    that._scrollIsAppended = true;\n                    that.options.pinned = false;\n                    if (containment) {\n                        that._updateBoundaries();\n                        options.maxWidth = Math.min(containment.width, options.maxWidth);\n                        options.maxHeight = Math.min(containment.height - toInt(wrapper, 'padding-top'), options.maxHeight);\n                        wrapper.css({\n                            maxWidth: options.maxWidth,\n                            maxHeight: options.maxHeight\n                        });\n                        if (top < containment.position.top) {\n                            top = that.minTop;\n                        } else if (top > containment.position.top + containment.height) {\n                            top = that.maxTop;\n                        } else {\n                            top = top + containment.scrollTop() - (containment.position.top + toInt(containment, 'border-top-width'));\n                        }\n                        if (left < containment.position.left) {\n                            left = that.minLeft;\n                        } else if (left > containment.position.left + containment.width) {\n                            left = that.maxLeft;\n                        } else {\n                            left = left + containment.scrollLeft() - (containment.position.left + toInt(containment, 'border-left-width'));\n                        }\n                    }\n                    position.top = constrain(top, that.minTop, that.maxTop);\n                    position.left = constrain(left, that.minLeft, that.maxLeft);\n                    wrapper.css(extend(position, { position: '' }));\n                    wrapper.children(KWINDOWTITLEBAR).find(KUNPIN).addClass('k-i-pin').removeClass('k-i-unpin');\n                }\n            },\n            _onDocumentResize: function () {\n                var that = this, wrapper = that.wrapper, wnd = $(window), zoomLevel = kendo.support.zoomLevel(), contentBoxSizing = wrapper.css('box-sizing') == 'content-box', w, h;\n                if (!that.options.isMaximized) {\n                    return;\n                }\n                var lrBorderWidth = contentBoxSizing ? toInt(wrapper, 'border-left-width') + toInt(wrapper, 'border-right-width') : 0;\n                var tbBorderWidth = contentBoxSizing ? toInt(wrapper, 'border-top-width') + toInt(wrapper, 'border-bottom-width') : 0;\n                var paddingTop = contentBoxSizing ? toInt(wrapper, 'padding-top') : 0;\n                if (that.containment && !that._isPinned) {\n                    w = that.containment.innerWidth() - lrBorderWidth;\n                    h = that.containment.innerHeight() - (tbBorderWidth + paddingTop);\n                } else {\n                    w = wnd.width() / zoomLevel - lrBorderWidth;\n                    h = wnd.height() / zoomLevel - (tbBorderWidth + paddingTop);\n                }\n                wrapper.css({\n                    width: w,\n                    height: h\n                });\n                that.options.width = w;\n                that.options.height = h;\n                that.resize();\n            },\n            refresh: function (options) {\n                var that = this, initOptions = that.options, element = $(that.element), iframe, showIframe, url;\n                if (!isPlainObject(options)) {\n                    options = { url: options };\n                }\n                options = extend(initOptions.content, options);\n                showIframe = defined(initOptions.iframe) ? initOptions.iframe : options.iframe;\n                url = options.url;\n                if (url) {\n                    if (!defined(showIframe)) {\n                        showIframe = !isLocalUrl(url);\n                    }\n                    if (!showIframe) {\n                        that._ajaxRequest(options);\n                    } else {\n                        iframe = element.find('.' + KCONTENTFRAME)[0];\n                        if (iframe) {\n                            iframe.src = url || iframe.src;\n                        } else {\n                            element.html(templates.contentFrame(extend({}, initOptions, { content: options })));\n                        }\n                        element.find('.' + KCONTENTFRAME).unbind('load' + NS).on('load' + NS, proxy(this._triggerRefresh, this));\n                    }\n                } else {\n                    if (options.template) {\n                        that.content(template(options.template)({}));\n                    }\n                    that.trigger(REFRESH);\n                }\n                element.toggleClass('k-window-iframecontent', !!showIframe);\n                return that;\n            },\n            _triggerRefresh: function () {\n                this.trigger(REFRESH);\n            },\n            _ajaxComplete: function () {\n                clearTimeout(this._loadingIconTimeout);\n                this.wrapper.find(REFRESHICON).removeClass(LOADING);\n            },\n            _ajaxError: function (xhr, status) {\n                this.trigger(ERROR, {\n                    status: status,\n                    xhr: xhr\n                });\n            },\n            _ajaxSuccess: function (contentTemplate) {\n                return function (data) {\n                    var html = data;\n                    if (contentTemplate) {\n                        html = template(contentTemplate)(data || {});\n                    }\n                    this.content(html, data);\n                    this.element.prop('scrollTop', 0);\n                    this.trigger(REFRESH);\n                };\n            },\n            _showLoading: function () {\n                this.wrapper.find(REFRESHICON).addClass(LOADING);\n            },\n            _ajaxRequest: function (options) {\n                this._loadingIconTimeout = setTimeout(proxy(this._showLoading, this), 100);\n                $.ajax(extend({\n                    type: 'GET',\n                    dataType: 'html',\n                    cache: false,\n                    error: proxy(this._ajaxError, this),\n                    complete: proxy(this._ajaxComplete, this),\n                    success: proxy(this._ajaxSuccess(options.template), this)\n                }, options));\n            },\n            _destroy: function () {\n                if (this.resizing) {\n                    this.resizing.destroy();\n                }\n                if (this.dragging) {\n                    this.dragging.destroy();\n                }\n                this.wrapper.off(NS).children(KWINDOWCONTENT).off(NS).end().find('.k-resize-handle,.k-window-titlebar').off(NS);\n                $(window).off('resize' + NS + this._marker);\n                $(window).off(MODAL_NS);\n                $(window).off(NS);\n                clearTimeout(this._loadingIconTimeout);\n                Widget.fn.destroy.call(this);\n                this.unbind(undefined);\n                kendo.destroy(this.wrapper);\n                this._removeOverlay(true);\n            },\n            destroy: function () {\n                this._destroy();\n                this.wrapper.empty().remove();\n                this.wrapper = this.appendTo = this.element = $();\n            },\n            _createWindow: function () {\n                var contentHtml = this.element, options = this.options, iframeSrcAttributes, wrapper, isRtl = kendo.support.isRtl(contentHtml);\n                if (options.scrollable === false) {\n                    contentHtml.css('overflow', 'hidden');\n                }\n                wrapper = $(templates.wrapper(options));\n                iframeSrcAttributes = contentHtml.find('iframe:not(.k-content-frame)').map(function () {\n                    var src = this.getAttribute('src');\n                    this.src = '';\n                    return src;\n                });\n                wrapper.toggleClass('k-rtl', isRtl).attr('tabindex', 0).append(contentHtml).find('iframe:not(.k-content-frame)').each(function (index) {\n                    this.src = iframeSrcAttributes[index];\n                });\n                if (this.containment) {\n                    this.containment.prepend(wrapper);\n                } else if (this.appendTo) {\n                    wrapper.appendTo(this.appendTo);\n                }\n                wrapper.find('.k-window-title').css(isRtl ? 'left' : 'right', outerWidth(wrapper.find('.k-window-actions')) + 10);\n                contentHtml.css('visibility', '').show();\n                contentHtml.find('[data-role=editor]').each(function () {\n                    var editor = $(this).data('kendoEditor');\n                    if (editor) {\n                        editor.refresh();\n                    }\n                });\n                wrapper = contentHtml = null;\n            }\n        });\n        templates = {\n            wrapper: template('<div class=\\'k-widget k-window\\'></div>'),\n            action: template('<a role=\\'button\\' href=\\'\\\\#\\' class=\\'k-button k-flat k-button-icon k-window-action\\' aria-label=\\'#= name #\\'>' + '<span class=\\'k-icon k-i-#= name.toLowerCase() #\\'></span>' + '</a>'),\n            titlebar: template('<div class=\\'k-window-titlebar\\'>' + '<span class=\\'k-window-title\\'>#= title #</span>' + '<div class=\\'k-window-actions\\'></div>' + '</div>'),\n            overlay: '<div class=\\'k-overlay\\'></div>',\n            contentFrame: template('<iframe frameborder=\\'0\\' title=\\'#= title #\\' class=\\'' + KCONTENTFRAME + '\\' ' + 'src=\\'#= content.url #\\'>' + 'This page requires frames in order to show content' + '</iframe>'),\n            resizeHandle: template('<div class=\\'k-resize-handle k-resize-#= data #\\'></div>')\n        };\n        function WindowResizing(wnd) {\n            var that = this;\n            that.owner = wnd;\n            that._preventDragging = false;\n            that._draggable = new Draggable(wnd.wrapper, {\n                filter: '>' + KWINDOWRESIZEHANDLES,\n                group: wnd.wrapper.id + '-resizing',\n                dragstart: proxy(that.dragstart, that),\n                drag: proxy(that.drag, that),\n                dragend: proxy(that.dragend, that)\n            });\n            that._draggable.userEvents.bind('press', proxy(that.addOverlay, that));\n            that._draggable.userEvents.bind('release', proxy(that.removeOverlay, that));\n        }\n        WindowResizing.prototype = {\n            addOverlay: function () {\n                this.owner.wrapper.append(templates.overlay);\n            },\n            removeOverlay: function () {\n                this.owner.wrapper.find(KOVERLAY).remove();\n            },\n            dragstart: function (e) {\n                var that = this;\n                var wnd = that.owner;\n                var wrapper = wnd.wrapper;\n                that._preventDragging = wnd.trigger(RESIZESTART);\n                if (that._preventDragging) {\n                    return;\n                }\n                that.elementPadding = parseInt(wrapper.css('padding-top'), 10);\n                that.initialPosition = kendo.getOffset(wrapper, 'position');\n                that.resizeDirection = e.currentTarget.prop('className').replace('k-resize-handle k-resize-', '');\n                that.initialSize = {\n                    width: wrapper.outerWidth(),\n                    height: wrapper.outerHeight()\n                };\n                wnd._updateBoundaries();\n                that.containerOffset = wnd.containment ? wnd.containment.position : kendo.getOffset(wnd.appendTo, 'position');\n                var offsetParent = wrapper.offsetParent();\n                if (offsetParent.is('html')) {\n                    that.containerOffset.top = that.containerOffset.left = 0;\n                } else {\n                    var marginTop = offsetParent.css('margin-top');\n                    var marginLeft = offsetParent.css('margin-left');\n                    var hasMargin = !zero.test(marginTop) || !zero.test(marginLeft);\n                    if (hasMargin) {\n                        var wrapperPosition = getPosition(wrapper[0]);\n                        var relativeElMarginLeft = wrapperPosition.left - that.containerOffset.left - that.initialPosition.left;\n                        var relativeElMarginTop = wrapperPosition.top - that.containerOffset.top - that.initialPosition.top;\n                        that._relativeElMarginLeft = relativeElMarginLeft > 1 ? relativeElMarginLeft : 0;\n                        that._relativeElMarginTop = relativeElMarginTop > 1 ? relativeElMarginTop : 0;\n                        that.initialPosition.left += that._relativeElMarginLeft;\n                        that.initialPosition.top += that._relativeElMarginTop;\n                    }\n                }\n                wrapper.children(KWINDOWRESIZEHANDLES).not(e.currentTarget).hide();\n                $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n            },\n            drag: function (e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                var that = this, wnd = that.owner, wrapper = wnd.wrapper, options = wnd.options, position = options.position, direction = that.resizeDirection, containerOffset = that.containerOffset, initialPosition = that.initialPosition, initialSize = that.initialSize, containmentContext = wnd.containment && !wnd._isPinned, rtl = kendo.support.isRtl(wnd.containment), leftRtlOffset = containmentContext && rtl && wnd.containment.innerWidth() > wnd.containment.width ? kendo.support.scrollbar() : 0, scrollOffset = containmentContext ? {\n                        top: wnd.containment.scrollTop(),\n                        left: wnd.containment.scrollLeft()\n                    } : {\n                        top: 0,\n                        left: 0\n                    }, newWidth, newHeight, windowBottom, windowRight, x = Math.max(e.x.location, 0), y = Math.max(e.y.location, 0);\n                if (direction.indexOf('e') >= 0) {\n                    if (wnd.containment && x - initialSize.width >= wnd.maxLeft - scrollOffset.left + containerOffset.left + leftRtlOffset) {\n                        newWidth = wnd.maxLeft + leftRtlOffset - initialPosition.left + initialSize.width - scrollOffset.left;\n                    } else {\n                        newWidth = x - initialPosition.left - containerOffset.left;\n                    }\n                    wrapper.outerWidth(constrain(newWidth, options.minWidth, options.maxWidth));\n                } else if (direction.indexOf('w') >= 0) {\n                    windowRight = initialPosition.left + initialSize.width + containerOffset.left;\n                    newWidth = constrain(windowRight - x, options.minWidth, options.maxWidth);\n                    position.left = windowRight - newWidth - containerOffset.left - leftRtlOffset - (that._relativeElMarginLeft || 0) + scrollOffset.left;\n                    if (wnd.containment && position.left <= wnd.minLeft) {\n                        position.left = wnd.minLeft;\n                        newWidth = constrain(windowRight - leftRtlOffset - position.left - containerOffset.left + scrollOffset.left, options.minWidth, options.maxWidth);\n                    }\n                    wrapper.css({\n                        left: position.left,\n                        width: newWidth\n                    });\n                }\n                var newWindowTop = y;\n                if (wnd.options.pinned) {\n                    newWindowTop -= $(window).scrollTop();\n                }\n                if (direction.indexOf('s') >= 0) {\n                    newHeight = newWindowTop - initialPosition.top - that.elementPadding - containerOffset.top;\n                    if (newWindowTop - initialSize.height - that.elementPadding >= wnd.maxTop + containerOffset.top - scrollOffset.top) {\n                        newHeight = wnd.maxTop - initialPosition.top + initialSize.height - scrollOffset.top;\n                    }\n                    wrapper.outerHeight(constrain(newHeight, options.minHeight, options.maxHeight));\n                } else if (direction.indexOf('n') >= 0) {\n                    windowBottom = initialPosition.top + initialSize.height + containerOffset.top;\n                    newHeight = constrain(windowBottom - newWindowTop, options.minHeight, options.maxHeight);\n                    position.top = windowBottom - newHeight - containerOffset.top - (that._relativeElMarginTop || 0) + scrollOffset.top;\n                    if (position.top <= wnd.minTop && wnd.containment) {\n                        position.top = wnd.minTop;\n                        newHeight = constrain(windowBottom - position.top - containerOffset.top + scrollOffset.top, options.minHeight, options.maxHeight);\n                    }\n                    wrapper.css({\n                        top: position.top,\n                        height: newHeight\n                    });\n                }\n                if (newWidth) {\n                    wnd.options.width = newWidth + 'px';\n                }\n                if (newHeight) {\n                    wnd.options.height = newHeight + 'px';\n                }\n                wnd.resize();\n            },\n            dragend: function (e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                var that = this, wnd = that.owner, wrapper = wnd.wrapper;\n                wrapper.children(KWINDOWRESIZEHANDLES).not(e.currentTarget).show();\n                $(BODY).css(CURSOR, '');\n                if (wnd.touchScroller) {\n                    wnd.touchScroller.reset();\n                }\n                if (e.keyCode == 27) {\n                    wrapper.css(that.initialPosition).css(that.initialSize);\n                }\n                wnd.trigger(RESIZEEND);\n                return false;\n            },\n            destroy: function () {\n                if (this._draggable) {\n                    this._draggable.destroy();\n                }\n                this._draggable = this.owner = null;\n            }\n        };\n        function WindowDragging(wnd, dragHandle) {\n            var that = this;\n            that.owner = wnd;\n            that._preventDragging = false;\n            that._draggable = new Draggable(wnd.wrapper, {\n                filter: dragHandle,\n                group: wnd.wrapper.id + '-moving',\n                dragstart: proxy(that.dragstart, that),\n                drag: proxy(that.drag, that),\n                dragend: proxy(that.dragend, that),\n                dragcancel: proxy(that.dragcancel, that)\n            });\n            that._draggable.userEvents.stopPropagation = false;\n        }\n        WindowDragging.prototype = {\n            dragstart: function (e) {\n                var wnd = this.owner, draggable = wnd.options.draggable, element = wnd.element, actions = element.find('.k-window-actions'), containerOffset = kendo.getOffset(wnd.appendTo);\n                this._preventDragging = wnd.trigger(DRAGSTART) || !draggable;\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n                wnd.initialWindowPosition = kendo.getOffset(wnd.wrapper, 'position');\n                wnd.initialPointerPosition = {\n                    left: wnd.options.position.left,\n                    top: wnd.options.position.top\n                };\n                wnd.startPosition = {\n                    left: e.x.client - wnd.initialWindowPosition.left,\n                    top: e.y.client - wnd.initialWindowPosition.top\n                };\n                wnd._updateBoundaries();\n                if (!wnd.containment) {\n                    if (actions.length > 0) {\n                        wnd.minLeft = outerWidth(actions) + parseInt(actions.css('right'), 10) - outerWidth(element);\n                    } else {\n                        wnd.minLeft = 20 - outerWidth(element);\n                    }\n                    wnd.minLeft -= containerOffset.left;\n                    wnd.minTop = -containerOffset.top;\n                }\n                wnd.wrapper.append(templates.overlay).children(KWINDOWRESIZEHANDLES).hide();\n                $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n            },\n            drag: function (e) {\n                var wnd = this.owner;\n                var position = wnd.options.position;\n                var axis = wnd.options.draggable.axis;\n                var left;\n                var top;\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n                if (!axis || axis.toLowerCase() === 'x') {\n                    left = e.x.client - wnd.startPosition.left;\n                    if (wnd.containment && !wnd._isPinned) {\n                        left += wnd.containment.scrollLeft();\n                    }\n                    position.left = constrain(left, wnd.minLeft, wnd.maxLeft);\n                }\n                if (!axis || axis.toLowerCase() === 'y') {\n                    top = e.y.client - wnd.startPosition.top;\n                    if (wnd.containment && !wnd._isPinned) {\n                        top += wnd.containment.scrollTop();\n                    }\n                    position.top = constrain(top, wnd.minTop, wnd.maxTop);\n                }\n                if (kendo.support.transforms) {\n                    $(wnd.wrapper).css('transform', 'translate(' + (position.left - wnd.initialPointerPosition.left) + 'px, ' + (position.top - wnd.initialPointerPosition.top) + 'px)');\n                } else {\n                    $(wnd.wrapper).css(position);\n                }\n            },\n            _finishDrag: function () {\n                var wnd = this.owner;\n                wnd.wrapper.children(KWINDOWRESIZEHANDLES).toggle(!wnd.options.isMinimized).end().find(KOVERLAY).remove();\n                $(BODY).css(CURSOR, '');\n            },\n            dragcancel: function (e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                this._finishDrag();\n                e.currentTarget.closest(KWINDOW).css(this.owner.initialWindowPosition);\n            },\n            dragend: function () {\n                var wnd = this.owner;\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n                $(wnd.wrapper).css(wnd.options.position).css('transform', '');\n                this._finishDrag();\n                wnd.trigger(DRAGEND);\n                return false;\n            },\n            destroy: function () {\n                if (this._draggable) {\n                    this._draggable.destroy();\n                }\n                this._draggable = this.owner = null;\n            }\n        };\n        kendo.ui.plugin(Window);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}